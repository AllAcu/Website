!function(e,t){function n(){var e=t.injector(["authApp"]);return e.get("authToken").loggedIn()}function i(){var e=t.injector(["authApp"]).get("authToken");return e.loggedIn()?"Bearer "+e.get():void 0}var r=t.module("allAcuApp",["ngRoute","timer","api","authApp","loginApp","patientsApp","providersApp","billerApp","userApp","ui.bootstrap"]);t.module("api",[]),t.module("authApp",[]),t.module("loginApp",[]),t.module("patientsApp",["verificationApp"]),t.module("providersApp",["api"]),t.module("billerApp",[]),t.module("userApp",[]),t.module("claimsApp",[]),t.module("verificationApp",[]),r.config(["$routeProvider",function(e){e.when("/login",{templateUrl:"/Templates/Users/login.html",controller:"loginController",anonymous:!0}).when("/signup",{controller:"signupController",templateUrl:"/Templates/Users/signup.html",anonymous:!0}).when("/register/:token",{controller:"registrationController",templateUrl:"/Templates/Users/register.html",anonymous:!0}).when("/logout",{controller:"logoutController",template:""}),e.when("/patients",{templateUrl:"/Templates/Patients/patientList.html",controller:"patientList",canChangeProviders:!0}).when("/patient/intake",{templateUrl:"/Templates/Patients/intake.html",controller:"patientIntake"}).when("/patient/:id",{templateUrl:"/Templates/Patients/details.html",controller:"patientDetails"}).when("/patient/:id/edit",{templateUrl:"/Templates/Patients/updateVitalInfo.html",controller:"patientEdit"}).when("/patient/:id/contact/edit",{templateUrl:"/Templates/Patients/updateContactInfo.html",controller:"patientEditContactInfo"}).when("/patient/:id/insurance/edit",{templateUrl:"/Templates/Patients/recordInsurance.html",controller:"patientInsurance"}).when("/patient/:patientId/insurance/verification/request",{templateUrl:"/Templates/Verification/verifyInsuranceRequest.html",controller:"verificationRequestCreate"}),e.when("/providers",{templateUrl:"/Templates/Providers/list.html",controller:"providerList"}).when("/provider/create",{templateUrl:"/Templates/Providers/details.html",controller:"providerCreate"}).when("/provider/:id",{templateUrl:"/Templates/Providers/details.html",controller:"providerDetails"}),e.when("/verifications",{templateUrl:"/Templates/Verification/list.html",controller:"insuranceVerificationList",canChangeProviders:!0}).when("/verification/:verificationId",{templateUrl:"/Templates/Verification/insuranceVerification.html",controller:"verification"}),e.when("/biller",{templateUrl:"/Templates/Biller/details.html",controller:"billerDetails"}),e.when("/users",{templateUrl:"/Templates/Users/list.html",controller:"userListController"}).when("/user/:id",{templateUrl:"/Templates/Users/details.html",controller:"userDetailsController"}),e.when("/claims",{templateUrl:"/Templates/Claims/claimsList.html",controller:"claimsList",canChangeProviders:!0}).when("/claim/edit/:id",{templateUrl:"/Templates/Claims/claimEdit.html",controller:"claimEdit"}).when("/claim/create",{templateUrl:"/Templates/Claims/claimEdit.html",controller:"claimCreate"}),e.otherwise({redirectTo:"/patients"})}]).run(["$rootScope","$location","$http",function(e,t,r){e.$on("$routeChangeStart",function(e,i,r){if(i.$$route){if(i.$$route.anonymous)return;n()||t.path("/login")}}),e.copyrightYear=(new Date).getFullYear(),r.defaults.headers.common.Authorization=i}]),r.controller("nav",["$scope","authToken",function(e,t){var n=[{label:"Login",link:"/#/login"},{label:"Sign up",link:"/#/signup"}],i=[{label:"Verifications",link:"/#/verifications"},{label:"Patients",link:"/#/patients"},{label:"Users",link:"/#/users"},{label:"Claims",link:"/#/claims"},{label:"Providers",link:"/#/providers"},{label:"Biller",link:"/#/biller"}];e.navItems=function(){return e.loggedIn()?i:n},e.loggedIn=function(){return t.loggedIn()}}]),r.controller("providerChooser",["$scope","$route","authToken","careProviderRepository",function(e,t,n,i){e.providers=function(){return i.providers()||[]},e.currentProvider=function(e){return i.current(e)},e.setProvider=function(){i.setCurrent(e.currentProvider.id)},e.$watch(n.loggedIn,function(){i.refresh()}),e.canChoose=function(){return t.current&&t.current.$$route&&t.current.$$route.canChangeProviders&&n.loggedIn()&&e.providers().length>1},e.shouldDisplay=function(){return n.loggedIn()&&!!e.providers().length}}]),e.app=r}(window,angular),function(e){e.service("$api",["$http","authToken",function(e,t){function n(e){return i+e}var i="http://allacu.dev/api";return{auth:{login:function(t){return e({method:"POST",url:"/api/Token",headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:function(e){var t=[];for(var n in e)t.push(encodeURIComponent(n)+"="+encodeURIComponent(e[n]));return t.join("&")},data:t})},changePassword:function(t,i,r){return e.post(n("/Account/ChangePassword"),{oldPassword:t,newPassword:i,confirmPassword:r})},loggedIn:function(){return t.loggedIn()}},verifications:{getAll:function(){return e.get(n("/insurance/verification"))},get:function(t){return e.get(n("/insurance/verification/{verificationId}".replace("{verificationId}"),t)).success(function(e){var t=e.benefits;t.calendarYearPlanEnd=t.calendarYearPlanEnd?new Date(t.calendarYearPlanEnd):null,t.calendarYearPlanBegin=t.calendarYearPlanBegin?new Date(t.calendarYearPlanBegin):null,e.patientName=e.patient.Name})},start:function(t,i){return e.post(n("/{PatientId}/insurance/verification/request".replace("{PatientId}",t)),{requestDraft:i})},updateRequest:function(t,i){return e.put(n("/insurance/verification/{verificationId}/request".replace("{verificationId}",t)),{requestDraft:i})},submitNewRequest:function(t,i){return e.post(n("/{PatientId}/insurance/verification/submitRequest".replace("{PatientId}",t)),{request:i})},submitRequest:function(t,i){return e.post(n("/insurance/verification/{verificationId}/submitRequest".replace("{verificationId}",t)),{request:i})},reject:function(t,i){return e.post(n("/insurance/verification/{verificationId}/rejectRequest".replace("{verificationId}",t)),{reason:i})},delegate:function(t,i){return e.post(n("/insurance/verification/{verificationId}/delegate".replace("{verificationId}",t)),{assignToUserId:i,comments:"from the chooser"})},startCall:function(t,i){return e.post(n("/insurance/verification/{verificationId}/startCall".replace("{verificationId}",t)),i)},update:function(t,i){return e.put(n("/insurance/verification/{verificationId}".replace("{verificationId}",t)),{benefits:i.benefits})},endCall:function(t,i){return e.post(n("/insurance/verification/{verificationId}/endCall".replace("{verificationId}",t)),i)},submitForApproval:function(t){return e.post(n("insurance/verification/{verificationId}/submitForApproval".replace("{verificationId}",t)))},complete:function(t,i){return e.post(n("/insurance/verification/{verificationId}/complete".replace("{verificationId}",t)),{benefits:i.benefits})}},providers:{get:function(t){return e.get(t?n("/provider/{id}".replace("{id}",t)):n("/provider"))},getAll:function(){return e.get(n("/provider/all"))},who:function(){return e.get(n("/provider/who"))},be:function(t){return e.get(n("/provider/{id}/be".replace("{id}",t)))},create:function(t){return e.post(n("/provider/new"),t)},update:function(t){return e.put(n("/provider/{id}".replace("{id}",t.id),t))},join:function(t,i){return e.post(n("/provider/{id}/join".replace("{id}",i)),{userId:t})},leave:function(t,i){return e.post(n("/provider/{id}/leave".replace("{id}",i)),{userId:t})},grantRole:function(t,i,r){return e.post(n("/provider/{id}/grant".replace("{id}",i)),{userId:t,roles:[r]})},revokeRole:function(t,i,r){return e.post(n("/provider/{id}/revoke".replace("{id}",i)),{userId:t,roles:[r]})}},biller:{get:function(){return e.get(n("/biller"))},invite:function(t,i){return e.post(n("/user/inviteToBiller"),{role:i,email:t})},grantRole:function(t,i){return e.post(n("/biller/grant"),{userId:t,roles:[i]})},revokeRole:function(t,i){return e.post(n("/biller/revoke"),{userId:t,roles:[i]})}},patients:{getAll:function(){return e.get(n("/patient"))},get:function(t){return e.get(n("/patient/"+t))},edit:function(t){return e.get(n("/patient/edit/"+t)).success(function(e){return e.dateOfBirth=new Date(e.dateOfBirth),e})}},users:{get:function(t){return e.get(n("/user/"+t))},getAll:function(){return e.get(n("/user"))},signup:function(t){return e.post(n("/user/signup"),{email:t})},invite:function(t,i){return e.post(n("/user/invite"),{email:i,organizationId:t})},getInvites:function(t){return e.get(n("/user/{id}/invites".replace("{id}",t)))},accept:function(t,i){return e.post(n("/user/{id}/accept".replace("{id}",t)),{organizationId:i})},register:function(t,i,r){return e.post(n("/user/register"),{name:i,password:r,token:t})},getConfirmations:function(){return e.get(n("/user/confirmations"))}}}}])}(angular.module("api")),function(e){e.factory("authToken",function(){var e={loggedIn:function(){return!!e.get()},get:function(){return window.sessionStorage.getItem("accessToken")},set:function(e){window.sessionStorage.setItem("accessToken",e)},clear:function(){window.sessionStorage.removeItem("accessToken")}};return e})}(angular.module("authApp")),function(e){e.controller("billerDetails",["$scope","$routeParams","$location","$api",function(e,t,n,i){e.biller={},e.users=function(){return e.biller.users},e.refresh=function(){i.biller.get().success(function(t){e.biller=t})},e.refresh()}]),e.controller("billerInvite",["$scope","$api",function(e,t){e.invite=function(){t.biller.invite(e.email,"employee").success(function(){console.log("invited "+e.email)})}}]),e.controller("billerPermissions",["$scope","$api",function(e,t){e.users=e.$parent.users;var n=e.$parent.refresh;e.roles=[{label:"Verifier",name:"verifier"},{label:"Approver",name:"approver"}],e.grant=function(e,i){t.biller.grantRole(e.user.userId,i.name).success(function(e){n()})},e.revoke=function(e,i){t.biller.revokeRole(e.user.userId,i).success(function(e){n()})}}])}(angular.module("billerApp")),function(e){e.factory("careProviderRepository",["$api","userSession",function(e,t){function n(n){var i=t().currentProvider;t().currentProvider=t().providers.filter(function(e){return e.id===n})[0],i!==t().currentProvider&&e.providers.be(t().currentProvider.id).success(function(){location.reload()})}function i(){return e.providers.get().success(function(i){t().providers=i,t().providers&&t().providers.length&&e.providers.who().success(function(e){t().currentProvider=t().providers.filter(function(t){return t.id===e})[0],t().currentProvider||n(t().providers[0].id)})}).error(function(){t().providers=[]})}return i(),{providers:function(){return t().providers||(t().providers=[],i()),t().providers},current:function(e){return e&&n(e.id),t().currentProvider},edit:function(t){return e.providers.get(t)},setCurrent:n,create:function(t){return e.providers.create(t)},refresh:function(){return i()}}}])}(window.app),function(e){e.controller("claimsList",["$scope","claimsRepository",function(e,t){e.drafts=[],t.findAll().success(function(t){e.drafts=t.map(function(e){return e.dateOfService=new Date(e.dateOfService),e})})}]),e.controller("claimEdit",["$scope","$routeParams","$location","claimsRepository",function(e,t,n,i){e.draft={},i.find(t.id).success(function(t){t.dateOfService=new Date(t.dateOfService),e.draft=t}),e.save=function(){i.update(e.draft).success(function(){n.path("/")})},e.submit=function(){i.submit(e.draft).success(function(){n.path("/")})}}]),e.controller("claimCreate",["$scope","$routeParams","$location","claimsRepository",function(e,t,n,i){e.draft={},e.save=function(){i.create(e.draft).success(function(){n.path("/")})}}])}(angular.module("claimsApp")),function(e){e.factory("claimsRepository",["$http",function(e){var t={findAll:function(){return e.get("/api/claim").success(function(e){return e.forEach(function(e){e.visit.dateOfService=new Date(e.visit.dateOfService).toDateString()}),e})},find:function(t){return e.get("/api/claim/"+t).success(function(e){return e.visit.dateOfService=new Date(e.visit.dateOfService),e})},create:function(t){return e.post("/api/claim",t)},update:function(t){return e.put("/api/claim/",t)},submit:function(t){return e.post("/api/claim/submit/"+t.id)}};return t}])}(window.app),function(e){e.directive("displayField",function(){return{restrict:"E",scope:{ngModel:"=ngModel",label:"@label"},template:'<div class="row"><div class="displayLabel"><label>{{label}}</label></div><div class="displayValue">{{ngModel}}</div></div>'}}),e.directive("editField",function(){return{restrict:"E",scope:{label:"@label",ngModel:"=ngModel",type:"@type"},template:'<div class="row"><div class="col-md-3"><label>{{label}}</label></div><div class="col-md-5"><input type="{{type}}" ng-model="ngModel" /></div></div>'}}),e.directive("editText",function(){return{restrict:"E",scope:{label:"@label",ngModel:"=ngModel"},template:'<div class="row"><div class="col-md-2"><label>{{label}}</label></div><div class="col-md-4"><textarea style="width:100%;max-width:100%;" ng-model="ngModel"></textarea></div></div>'}}),e.directive("editChoice",function(){return{restrict:"E",require:"ngModel",scope:{label:"@label",ngModel:"=ngModel",options:"=options"},template:'<div class="row"><div class="col-md-2"><label>{{label}}</label></div><label class="col-md-3" ng-repeat="(key, value) in options"><input type="radio" ng-model="$parent.ngModel" value="{{value.value}}">{{value.label}}</label></div>'}}),e.directive("editYesNo",function(){return{restrict:"E",require:"ngModel",scope:{label:"@label",ngModel:"=ngModel"},template:'<div class="row"><div class="col-md-2"><label>{{label}}</label></div><label class="col-md-3"><input type="radio" ng-model="ngModel" ng-value="true">Yes</label><label class="col-md-3"><input type="radio" ng-model="ngModel" ng-value="false">No</label></div>'}}),e.directive("displayAddress",function(){return{restrict:"E",scope:{address:"=ngModel"},template:'<div class="row"><div class="col-md-3"><label>Address</label></div><div class="col-md-4"><div>{{address.address1}}</div><div>{{address.address2}}</div><div>{{address.city}}, {{address.state}} {{address.postalCode}}</div></div></div>'}}),e.directive("editAddress",function(){return{restrict:"E",scope:{address:"=ngModel"},template:'<div><edit-field label="Address" ng-model="address.address1"></edit-field><edit-field ng-model="address.address2"></edit-field><edit-field label="City" ng-model="address.city"></edit-field><edit-field label="State" ng-model="address.state"></edit-field><edit-field label="Postal Code" ng-model="address.postalCode"></edit-field></div>'}}),e.directive("question",function(){return{restrict:"E",require:"ngModel",scope:{label:"@label",ngModel:"=ngModel"},replace:!0,transclude:!0,template:'<fieldset class="panel panel-default question">   <div class="panel-heading">       <div class="checkbox">           <label>               <input type="checkbox" ng-model="ngModel"/>{{label}} ({{ngModel ? "yes" : "no"}})           </label>       </div>   </div>   <div class="panel-body" ng-show="ngModel" ng-transclude>   </div></fieldset>'}})}(window.app),function(e){e.controller("loginController",["$scope","userCommands","authToken","$location",function(e,t,n,i){e.login=function(){t.login(e.userName,e.password).success(function(e){n.set(e.access_token),i.path("/")})}}]),e.controller("logoutController",["$scope","authToken","userSession","$location",function(e,t,n,i){t.clear(),n().logout(),i.path("/")}])}(angular.module("loginApp")),function(e){e.factory("patientCommands",["$http",function(e){return{intake:function(t){return e.post("/api/patient/",t)},addInsurance:function(t,n){return e.post("/api/patient/"+t+"/insurance",{medicalInsurance:"medical"===n.classification?n.medical:null,personalInjuryProtection:"pip"===n.classification?n.pip:null})},update:function(t){return e.put("/api/patient/"+t.patientId,{name:t.name,gender:t.gender,dateOfBirth:t.dateOfBirth})},updateContactInfo:function(t,n){return e.put("/api/patient/"+t+"/contact",{address:{line1:n.address.address1,line2:n.address.address2,city:n.address.city,state:n.address.state,postalCode:n.address.postalCode},phoneNumber:n.phoneNumber})}}}])}(window.app),function(e){e.factory("patientRepository",["$api",function(e){return{findAll:function(){return e.patients.getAll()},details:function(t){return e.patients.get(t)},edit:function(t){return e.patients.edit(t)}}}])}(window.app),function(e){e.controller("patientIntake",["$scope","$location","patientCommands",function(e,t,n){e.patient={},e.save=function(){n.intake(e.patient).success(function(){t.path("/patient")})}}]),e.controller("patientList",["$scope","patientRepository",function(e,t){t.findAll().success(function(t){e.patients=t}),e.dismiss=function(e){alert("deleting "+e.name)}}]),e.controller("patientDetails",["$scope","$routeParams","patientRepository",function(e,t,n){e.patient={},n.details(t.id).success(function(t){e.patient=t}),e.insuranceLinks={create:function(){return e.patient.currentVerification&&(!e.patient.currentVerification.status||"Approved"===e.patient.currentVerification.status)},editRequest:function(){return e.patient.currentVerification&&"Draft"===e.patient.currentVerification.status},viewSubmitted:function(){return e.patient.currentVerification&&"Submitted"===e.patient.currentVerification.status},viewVerification:function(){return e.patient.currentVerification&&"Approved"===e.patient.currentVerification.status}}}]),e.controller("patientEdit",["$scope","$routeParams","$location","patientRepository","patientCommands",function(e,t,n,i,r){e.patient={},i.edit(t.id).success(function(t){e.patient=t}),e.save=function(){r.update(e.patient).success(function(){n.path("/patient/"+e.patient.patientId)})}}]),e.controller("patientEditContactInfo",["$scope","$routeParams","$location","patientRepository","patientCommands",function(e,t,n,i,r){var o=t.id;e.contact={},i.edit(o).success(function(t){e.contact={address:{address1:t.address1,address2:t.address2,city:t.city,state:t.state,postalCode:t.postalCode},phoneNumber:t.phoneNumber}}),e.save=function(){r.updateContactInfo(o,e.contact).success(function(){n.path("/patient/"+o)})}}]),e.controller("patientInsurance",["$scope","$routeParams","$location","patientRepository","patientCommands",function(e,t,n,i,r){e.patientId=t.id,e.classification="medical",i.edit(t.id).success(function(t){e.medical=t.medicalInsurance||{},e.pip=t.personalInjuryProtection||{}}),e.save=function(){r.addInsurance(e.patientId,e).success(function(){n.path("/patient/"+e.patientId)})},e.insuranceTemplate=function(){return"medical"===e.classification?"/Templates/Patients/inputMedicalInsurance.html":"pip"===e.classification?"/Templates/Patients/inputPersonalInjuryProtection.html":""}}])}(angular.module("patientsApp")),function(e){e.controller("providerList",["$scope","careProviderRepository",function(e,t){e.providers=function(){return t.providers()},e.link=function(e){return"#provider/"+e.id}}]),e.controller("providerCreate",["$scope","$location","$api",function(e,t,n){e.provider={},e.save=function(){n.providers.create(e.provider).success(function(){t.path("/providers")})}}]),e.controller("providerDetails",["$scope","$routeParams","$location","$api","careProviderRepository",function(e,t,n,i,r){function o(){r.edit(t.id).success(function(t){e.provider=t})}e.provider={},e.users=function(){return e.provider.users},o(),e.save=function(){i.providers.update(e.provider).success(function(){r.refresh(),n.path("/providers")})},e.refresh=function(){r.refresh(),o()}}]),e.controller("providerPermissions",["$scope","$api",function(e,t){var n=function(){return e.$parent.provider};e.users=e.$parent.users;var i=e.refresh=e.$parent.refresh;e.roles=[{label:"Owner",name:"owner"},{label:"Practitioner",name:"practitioner"}],e.grant=function(e,r){t.providers.grantRole(e.user.userId,n().id,r.name).success(function(e){i()})},e.revoke=function(e,r){t.providers.revokeRole(e.user.userId,n().id,r).success(function(e){i()})}}])}(angular.module("providersApp")),function(e){e.factory("userCommands",["$api",function(e){return{login:function(t,n){var i={grant_type:"password",username:t,password:n};return e.auth.login(i)},signup:function(t){return e.users.signup(t)},invite:function(t,n){return e.users.invite(t,n)},register:function(t,n,i){return e.users.register(t,n,i)}}}])}(angular.module("loginApp")),function(e){e.factory("userSession",function(){function e(){return{logout:function(){t=e()}}}var t=e();return function(){return t}})}(window.app),function(e){e.controller("registrationController",["$scope","$routeParams","$location","userCommands",function(e,t,n,i){var r=t.token;e.registration={},e.save=function(){e.password===e.confirmPassword&&i.register(r,e.registration.name,e.registration.password).success(function(){console.log("registered "+e.name),n.path("/")})}}]),e.controller("userListController",["$scope","$api",function(e,t){var n=[];e.users=function(){return n},e.link=function(e){return"#user/"+e.userId},t.users.getAll().success(function(e){n=e})}]),e.controller("userDetailsController",["$scope","$routeParams","$api","careProviderRepository",function(e,t,n,i){function r(){n.users.get(o).success(function(t){e.user=t}),i.refresh()}var o=t.id;e.user=null,e.providers=function(){return e.user?e.user.providerRoles.map(function(e){return e.provider}):[]},e.billers=function(){return e.user?e.user.billerRoles.map(function(e){return e.biller}):[]},e.providerInvitations=function(){return e.user?e.user.providerInvitations:[]},e.billerInvitations=function(){return e.user?e.user.billerInvitations:[]},e.hasProvider=function(t){return e.user&&e.providers().some(function(e){return e.id===t.id})},r(),e.accept=function(e){n.users.accept(o,e.organization.id).success(function(){r()})},e.leave=function(e){n.providers.leave(o,e.id).success(function(){r()})}}]),e.controller("inviteController",["$scope","$routeParams","$location","userCommands",function(e,t,n,i){var r=t.id;e.invite=function(){i.invite(r,e.email).success(function(){console.log("invited "+e.email),n.path("/providers")})}}]),e.controller("signupController",["$scope","$routeParams","$location","userCommands",function(e,t,n,i){e.signup=function(){i.signup(e.email).success(function(){console.log("signed up "+e.email),n.path("/")})}}]),e.controller("userChooser",["$scope","$api",function(e,t){var n=[];e.users=function(){return n},t.users.getAll().success(function(e){n=e})}]),e.controller("roleChooser",["$scope",function(e){e.roles=function(t){return e.$parent.roles.filter(function(e){return!t.roles.some(function(t){return t===e.name})})},e.grant=e.$parent.grant}]),e.controller("oustandingInvites",["$scope","$routeParams","$location","$api",function(e,t,n,i){e.confirmations=[],i.users.getConfirmations().success(function(t){e.confirmations=t}),e.link=function(e){return"#register/"+e.token}}])}(angular.module("userApp")),function(e){e.service("verificationRepository",["$api","userSession",function(e,t){function n(){return t().verifications||(t().verifications={}),e.verifications.getAll().success(function(e){t().verifications=e})}return n(),{getVerification:function(n){return t().verifications&&t().verifications[n]&&t().verifications[n].request?{success:function(e){e(t().verifications[n])}}:e.verifications.get(n).success(function(e){t().verifications[e.verificationId]=e})},verifications:function(){return t().verifications||(t().verifications={},n()),t().verifications}}}])}(window.app),function(e){e.controller("verificationRequestCreate",["$scope","$routeParams","$location","$api",function(e,t,n,i){var r=t.patientId;e.save=function(){i.verifications.start(r,e.request).success(function(e){n.path("/verification/"+e)})},e.submit=function(){i.verifications.submitNewRequest(r,e.request).success(function(){n.path("/patient/"+r)})}}]),e.controller("verification",["$scope","$routeParams","$location","$modal","verificationRepository","$api",function(e,t,n,i,r,o){function a(t){var n=i.open({animation:!0,templateUrl:"/Templates/Verification/actions.html",controller:"verificationActions",size:"lg",resolve:{verification:function(){return e.verification},template:function(){return t},patientName:function(){return e.verification.patient.patientName}}});n.result.then(function(e){console.dir(e)},function(){console.info("Modal dismissed at: "+new Date)})}var s,c=t.verificationId;r.getVerification(c).success(function(t){e.verification=t,s=t.patientId}),e.verificationTemplate=function(){switch(e.verification&&e.verification.status){case"Draft":case"Rejected":return"/Templates/Verification/verifyInsuranceRequest.html";case"Submitted":return"/Templates/Verification/verifyInsurance.html";case"Assigned":return"/Templates/Verification/displayRequest.html";case"In Progress":return"/Templates/Verification/verifyInsurance.html";case"PendingApproval":return"/Templates/Verification/verifyInsurance.html";case"Verified":return"/Templates/Verification/insuranceVerificationLetter.html"}return""};var l={assign:{name:"Assign",handler:"startAssignment"},startCall:{name:"Start Call",handler:"startCall"},endCall:{name:"End Call",handler:"endCall"},save:{name:"Save",handler:"save"},saveDraft:{name:"Save",handler:"saveDraft"},approve:{name:"Approve",handler:"dummy"},reject:{name:"Reject",handler:"dummy"}};e.availableActions=function(){switch(e.verification&&e.verification.status){case"Draft":case"Rejected":return[l.saveDraft];case"Submitted":return[l.assign];case"Assigned":return[l.startCall,l.assign];case"In Progress":return[l.save,l.endCall];case"PendingApproval":return[l.approve,l.reject];case"Verified":return[]}return[]},e.dummy=function(){console.log("Dummy callback")},e.handleClick=function(t){e[t]()},e.saveDraft=function(){o.verifications.updateRequest(c,e.request)},e.submit=function(){o.verifications.submitRequest(c,e.request).success(function(){n.path("/patient/"+s)})},e.startAssignment=function(){a("/Templates/Verification/assign.html")},e.startCall=function(){a("/Templates/Verification/startCall.html")},e.endCall=function(){a("/Templates/Verification/endCall.html")}}]),e.controller("insuranceVerificationList",["$scope","verificationRepository",function(e,t){e.verifications=t.verifications,e.link=function(e){return"#verification/"+e.verificationId},e.refresh=function(){t.refresh()}}]),e.controller("verificationActions",["$scope","$api","verification","patientName","template",function(e,t,n,i,r){var o=n.id;e.verification=n,e.actionTemplate=r,e.patientName=i,e.complete=function(){t.verifications.complete(o,e.verification).success(function(){$location.path("/verifications")})},e.select=function(t){e.selectedUser=t},e.reject=function(){t.verifications.reject(o,e.verification).success(function(){$location.path("/patient/"+patientId)})},e.assign=function(){t.verifications.delegate(o,e.selectedUser.userId)}}]),e.controller("verification.startCall",["$scope","$location","$api",function(e,t,n){var i=e.$parent.verification.verificationId;e.startCall=function(){console.log("starting call: "+i),n.verifications.startCall(i,{serviceCenterRepresentative:e.serviceCenterRepresentative}).success(function(){t.path("/verification/"+i)})}}]),e.controller("verification.onCall",["$scope","$api",function(e,t){e.verification=e.$parent.verification;var n=e.$parent.verification.verificationId;e.callStart=function(){return new Date(e.verification.currentCallStartTime).getTime()},e.save=function(){t.verifications.update(n,e.verification).success(function(){console.log("saved "+n)})}}]),e.controller("verification.endCall",["$scope","$api",function(e,t){e.verification=e.$parent.verification;var n=e.$parent.verification.verificationId;e.serviceCenterRepresentative=e.verification.serviceCenterRepresentative,e.endCall=function(){t.verifications.endCall(n,{serviceCenterRepresentative:e.serviceCenterRepresentative,callReferenceNumber:e.callReferenceNumber})}}]),e.controller("userChooser",["$scope","$api",function(e,t){var n=[];e.users=function(){return n},t.users.getAll().success(function(e){n=e})}])}(angular.module("verificationApp")),function(e){e.service("$api",["$http","authToken",function(e,t){function n(e){return i+e}var i="http://allacu.dev/api";return{auth:{login:function(t){return e({method:"POST",url:"/api/Token",headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:function(e){var t=[];for(var n in e)t.push(encodeURIComponent(n)+"="+encodeURIComponent(e[n]));return t.join("&")},data:t})},changePassword:function(t,i,r){return e.post(n("/Account/ChangePassword"),{oldPassword:t,newPassword:i,confirmPassword:r})},loggedIn:function(){return t.loggedIn()}},verifications:{getAll:function(){return e.get(n("/insurance/verification"))},get:function(t){return e.get(n("/insurance/verification/{verificationId}".replace("{verificationId}"),t)).success(function(e){var t=e.benefits;t.calendarYearPlanEnd=t.calendarYearPlanEnd?new Date(t.calendarYearPlanEnd):null,t.calendarYearPlanBegin=t.calendarYearPlanBegin?new Date(t.calendarYearPlanBegin):null,e.patientName=e.patient.Name})},start:function(t,i){return e.post(n("/{PatientId}/insurance/verification/request".replace("{PatientId}",t)),{requestDraft:i})},updateRequest:function(t,i){return e.put(n("/insurance/verification/{verificationId}/request".replace("{verificationId}",t)),{requestDraft:i})},submitNewRequest:function(t,i){return e.post(n("/{PatientId}/insurance/verification/submitRequest".replace("{PatientId}",t)),{request:i})},submitRequest:function(t,i){return e.post(n("/insurance/verification/{verificationId}/submitRequest".replace("{verificationId}",t)),{request:i})},reject:function(t,i){return e.post(n("/insurance/verification/{verificationId}/rejectRequest".replace("{verificationId}",t)),{reason:i})},delegate:function(t,i){return e.post(n("/insurance/verification/{verificationId}/delegate".replace("{verificationId}",t)),{assignToUserId:i,comments:"from the chooser"})},startCall:function(t,i){return e.post(n("/insurance/verification/{verificationId}/startCall".replace("{verificationId}",t)),i)},update:function(t,i){return e.put(n("/insurance/verification/{verificationId}".replace("{verificationId}",t)),{benefits:i.benefits})},endCall:function(t,i){return e.post(n("/insurance/verification/{verificationId}/endCall".replace("{verificationId}",t)),i)},submitForApproval:function(t){return e.post(n("insurance/verification/{verificationId}/submitForApproval".replace("{verificationId}",t)))},complete:function(t,i){return e.post(n("/insurance/verification/{verificationId}/complete".replace("{verificationId}",t)),{benefits:i.benefits})}},providers:{get:function(t){return e.get(t?n("/provider/{id}".replace("{id}",t)):n("/provider"))},getAll:function(){return e.get(n("/provider/all"))},who:function(){return e.get(n("/provider/who"))},be:function(t){return e.get(n("/provider/{id}/be".replace("{id}",t)))},create:function(t){return e.post(n("/provider/new"),t)},update:function(t){return e.put(n("/provider/{id}".replace("{id}",t.id),t))},join:function(t,i){return e.post(n("/provider/{id}/join".replace("{id}",i)),{userId:t})},leave:function(t,i){return e.post(n("/provider/{id}/leave".replace("{id}",i)),{userId:t})},grantRole:function(t,i,r){return e.post(n("/provider/{id}/grant".replace("{id}",i)),{userId:t,roles:[r]})},revokeRole:function(t,i,r){return e.post(n("/provider/{id}/revoke".replace("{id}",i)),{userId:t,roles:[r]})}},biller:{get:function(){return e.get(n("/biller"))},invite:function(t,i){return e.post(n("/user/inviteToBiller"),{role:i,email:t})},grantRole:function(t,i){return e.post(n("/biller/grant"),{userId:t,roles:[i]})},revokeRole:function(t,i){return e.post(n("/biller/revoke"),{userId:t,roles:[i]})}},patients:{getAll:function(){return e.get(n("/patient"))},get:function(t){return e.get(n("/patient/"+t))},edit:function(t){return e.get(n("/patient/edit/"+t)).success(function(e){return e.dateOfBirth=new Date(e.dateOfBirth),e})}},users:{get:function(t){return e.get(n("/user/"+t))},getAll:function(){return e.get(n("/user"))},signup:function(t){return e.post(n("/user/signup"),{email:t})},invite:function(t,i){return e.post(n("/user/invite"),{email:i,organizationId:t})},getInvites:function(t){return e.get(n("/user/{id}/invites".replace("{id}",t)));

},accept:function(t,i){return e.post(n("/user/{id}/accept".replace("{id}",t)),{organizationId:i})},register:function(t,i,r){return e.post(n("/user/register"),{name:i,password:r,token:t})},getConfirmations:function(){return e.get(n("/user/confirmations"))}}}}])}(angular.module("api")),function(e,t){function n(){var e=t.injector(["authApp"]);return e.get("authToken").loggedIn()}function i(){var e=t.injector(["authApp"]).get("authToken");return e.loggedIn()?"Bearer "+e.get():void 0}var r=t.module("allAcuApp",["ngRoute","timer","api","authApp","loginApp","patientsApp","providersApp","billerApp","userApp","ui.bootstrap"]);t.module("api",[]),t.module("authApp",[]),t.module("loginApp",[]),t.module("patientsApp",["verificationApp"]),t.module("providersApp",["api"]),t.module("billerApp",[]),t.module("userApp",[]),t.module("claimsApp",[]),t.module("verificationApp",[]),r.config(["$routeProvider",function(e){e.when("/login",{templateUrl:"/Templates/Users/login.html",controller:"loginController",anonymous:!0}).when("/signup",{controller:"signupController",templateUrl:"/Templates/Users/signup.html",anonymous:!0}).when("/register/:token",{controller:"registrationController",templateUrl:"/Templates/Users/register.html",anonymous:!0}).when("/logout",{controller:"logoutController",template:""}),e.when("/patients",{templateUrl:"/Templates/Patients/patientList.html",controller:"patientList",canChangeProviders:!0}).when("/patient/intake",{templateUrl:"/Templates/Patients/intake.html",controller:"patientIntake"}).when("/patient/:id",{templateUrl:"/Templates/Patients/details.html",controller:"patientDetails"}).when("/patient/:id/edit",{templateUrl:"/Templates/Patients/updateVitalInfo.html",controller:"patientEdit"}).when("/patient/:id/contact/edit",{templateUrl:"/Templates/Patients/updateContactInfo.html",controller:"patientEditContactInfo"}).when("/patient/:id/insurance/edit",{templateUrl:"/Templates/Patients/recordInsurance.html",controller:"patientInsurance"}).when("/patient/:patientId/insurance/verification/request",{templateUrl:"/Templates/Verification/verifyInsuranceRequest.html",controller:"verificationRequestCreate"}),e.when("/providers",{templateUrl:"/Templates/Providers/list.html",controller:"providerList"}).when("/provider/create",{templateUrl:"/Templates/Providers/details.html",controller:"providerCreate"}).when("/provider/:id",{templateUrl:"/Templates/Providers/details.html",controller:"providerDetails"}),e.when("/verifications",{templateUrl:"/Templates/Verification/list.html",controller:"insuranceVerificationList",canChangeProviders:!0}).when("/verification/:verificationId",{templateUrl:"/Templates/Verification/insuranceVerification.html",controller:"verification"}),e.when("/biller",{templateUrl:"/Templates/Biller/details.html",controller:"billerDetails"}),e.when("/users",{templateUrl:"/Templates/Users/list.html",controller:"userListController"}).when("/user/:id",{templateUrl:"/Templates/Users/details.html",controller:"userDetailsController"}),e.when("/claims",{templateUrl:"/Templates/Claims/claimsList.html",controller:"claimsList",canChangeProviders:!0}).when("/claim/edit/:id",{templateUrl:"/Templates/Claims/claimEdit.html",controller:"claimEdit"}).when("/claim/create",{templateUrl:"/Templates/Claims/claimEdit.html",controller:"claimCreate"}),e.otherwise({redirectTo:"/patients"})}]).run(["$rootScope","$location","$http",function(e,t,r){e.$on("$routeChangeStart",function(e,i,r){if(i.$$route){if(i.$$route.anonymous)return;n()||t.path("/login")}}),e.copyrightYear=(new Date).getFullYear(),r.defaults.headers.common.Authorization=i}]),r.controller("nav",["$scope","authToken",function(e,t){var n=[{label:"Login",link:"/#/login"},{label:"Sign up",link:"/#/signup"}],i=[{label:"Verifications",link:"/#/verifications"},{label:"Patients",link:"/#/patients"},{label:"Users",link:"/#/users"},{label:"Claims",link:"/#/claims"},{label:"Providers",link:"/#/providers"},{label:"Biller",link:"/#/biller"}];e.navItems=function(){return e.loggedIn()?i:n},e.loggedIn=function(){return t.loggedIn()}}]),r.controller("providerChooser",["$scope","$route","authToken","careProviderRepository",function(e,t,n,i){e.providers=function(){return i.providers()||[]},e.currentProvider=function(e){return i.current(e)},e.setProvider=function(){i.setCurrent(e.currentProvider.id)},e.$watch(n.loggedIn,function(){i.refresh()}),e.canChoose=function(){return t.current&&t.current.$$route&&t.current.$$route.canChangeProviders&&n.loggedIn()&&e.providers().length>1},e.shouldDisplay=function(){return n.loggedIn()&&!!e.providers().length}}]),e.app=r}(window,angular),function(e){e.factory("authToken",function(){var e={loggedIn:function(){return!!e.get()},get:function(){return window.sessionStorage.getItem("accessToken")},set:function(e){window.sessionStorage.setItem("accessToken",e)},clear:function(){window.sessionStorage.removeItem("accessToken")}};return e})}(angular.module("authApp")),function(e){e.controller("billerDetails",["$scope","$routeParams","$location","$api",function(e,t,n,i){e.biller={},e.users=function(){return e.biller.users},e.refresh=function(){i.biller.get().success(function(t){e.biller=t})},e.refresh()}]),e.controller("billerInvite",["$scope","$api",function(e,t){e.invite=function(){t.biller.invite(e.email,"employee").success(function(){console.log("invited "+e.email)})}}]),e.controller("billerPermissions",["$scope","$api",function(e,t){e.users=e.$parent.users;var n=e.$parent.refresh;e.roles=[{label:"Verifier",name:"verifier"},{label:"Approver",name:"approver"}],e.grant=function(e,i){t.biller.grantRole(e.user.userId,i.name).success(function(e){n()})},e.revoke=function(e,i){t.biller.revokeRole(e.user.userId,i).success(function(e){n()})}}])}(angular.module("billerApp")),function(e){e.factory("careProviderRepository",["$api","userSession",function(e,t){function n(n){var i=t().currentProvider;t().currentProvider=t().providers.filter(function(e){return e.id===n})[0],i!==t().currentProvider&&e.providers.be(t().currentProvider.id).success(function(){location.reload()})}function i(){return e.providers.get().success(function(i){t().providers=i,t().providers&&t().providers.length&&e.providers.who().success(function(e){t().currentProvider=t().providers.filter(function(t){return t.id===e})[0],t().currentProvider||n(t().providers[0].id)})}).error(function(){t().providers=[]})}return i(),{providers:function(){return t().providers||(t().providers=[],i()),t().providers},current:function(e){return e&&n(e.id),t().currentProvider},edit:function(t){return e.providers.get(t)},setCurrent:n,create:function(t){return e.providers.create(t)},refresh:function(){return i()}}}])}(window.app),function(e){e.controller("claimsList",["$scope","claimsRepository",function(e,t){e.drafts=[],t.findAll().success(function(t){e.drafts=t.map(function(e){return e.dateOfService=new Date(e.dateOfService),e})})}]),e.controller("claimEdit",["$scope","$routeParams","$location","claimsRepository",function(e,t,n,i){e.draft={},i.find(t.id).success(function(t){t.dateOfService=new Date(t.dateOfService),e.draft=t}),e.save=function(){i.update(e.draft).success(function(){n.path("/")})},e.submit=function(){i.submit(e.draft).success(function(){n.path("/")})}}]),e.controller("claimCreate",["$scope","$routeParams","$location","claimsRepository",function(e,t,n,i){e.draft={},e.save=function(){i.create(e.draft).success(function(){n.path("/")})}}])}(angular.module("claimsApp")),function(e){e.factory("claimsRepository",["$http",function(e){var t={findAll:function(){return e.get("/api/claim").success(function(e){return e.forEach(function(e){e.visit.dateOfService=new Date(e.visit.dateOfService).toDateString()}),e})},find:function(t){return e.get("/api/claim/"+t).success(function(e){return e.visit.dateOfService=new Date(e.visit.dateOfService),e})},create:function(t){return e.post("/api/claim",t)},update:function(t){return e.put("/api/claim/",t)},submit:function(t){return e.post("/api/claim/submit/"+t.id)}};return t}])}(window.app),function(e){e.directive("displayField",function(){return{restrict:"E",scope:{ngModel:"=ngModel",label:"@label"},template:'<div class="row"><div class="displayLabel"><label>{{label}}</label></div><div class="displayValue">{{ngModel}}</div></div>'}}),e.directive("editField",function(){return{restrict:"E",scope:{label:"@label",ngModel:"=ngModel",type:"@type"},template:'<div class="row"><div class="col-md-3"><label>{{label}}</label></div><div class="col-md-5"><input type="{{type}}" ng-model="ngModel" /></div></div>'}}),e.directive("editText",function(){return{restrict:"E",scope:{label:"@label",ngModel:"=ngModel"},template:'<div class="row"><div class="col-md-2"><label>{{label}}</label></div><div class="col-md-4"><textarea style="width:100%;max-width:100%;" ng-model="ngModel"></textarea></div></div>'}}),e.directive("editChoice",function(){return{restrict:"E",require:"ngModel",scope:{label:"@label",ngModel:"=ngModel",options:"=options"},template:'<div class="row"><div class="col-md-2"><label>{{label}}</label></div><label class="col-md-3" ng-repeat="(key, value) in options"><input type="radio" ng-model="$parent.ngModel" value="{{value.value}}">{{value.label}}</label></div>'}}),e.directive("editYesNo",function(){return{restrict:"E",require:"ngModel",scope:{label:"@label",ngModel:"=ngModel"},template:'<div class="row"><div class="col-md-2"><label>{{label}}</label></div><label class="col-md-3"><input type="radio" ng-model="ngModel" ng-value="true">Yes</label><label class="col-md-3"><input type="radio" ng-model="ngModel" ng-value="false">No</label></div>'}}),e.directive("displayAddress",function(){return{restrict:"E",scope:{address:"=ngModel"},template:'<div class="row"><div class="col-md-3"><label>Address</label></div><div class="col-md-4"><div>{{address.address1}}</div><div>{{address.address2}}</div><div>{{address.city}}, {{address.state}} {{address.postalCode}}</div></div></div>'}}),e.directive("editAddress",function(){return{restrict:"E",scope:{address:"=ngModel"},template:'<div><edit-field label="Address" ng-model="address.address1"></edit-field><edit-field ng-model="address.address2"></edit-field><edit-field label="City" ng-model="address.city"></edit-field><edit-field label="State" ng-model="address.state"></edit-field><edit-field label="Postal Code" ng-model="address.postalCode"></edit-field></div>'}}),e.directive("question",function(){return{restrict:"E",require:"ngModel",scope:{label:"@label",ngModel:"=ngModel"},replace:!0,transclude:!0,template:'<fieldset class="panel panel-default question">   <div class="panel-heading">       <div class="checkbox">           <label>               <input type="checkbox" ng-model="ngModel"/>{{label}} ({{ngModel ? "yes" : "no"}})           </label>       </div>   </div>   <div class="panel-body" ng-show="ngModel" ng-transclude>   </div></fieldset>'}})}(window.app),function(e){e.controller("loginController",["$scope","userCommands","authToken","$location",function(e,t,n,i){e.login=function(){t.login(e.userName,e.password).success(function(e){n.set(e.access_token),i.path("/")})}}]),e.controller("logoutController",["$scope","authToken","userSession","$location",function(e,t,n,i){t.clear(),n().logout(),i.path("/")}])}(angular.module("loginApp")),function(e){e.factory("patientCommands",["$http",function(e){return{intake:function(t){return e.post("/api/patient/",t)},addInsurance:function(t,n){return e.post("/api/patient/"+t+"/insurance",{medicalInsurance:"medical"===n.classification?n.medical:null,personalInjuryProtection:"pip"===n.classification?n.pip:null})},update:function(t){return e.put("/api/patient/"+t.patientId,{name:t.name,gender:t.gender,dateOfBirth:t.dateOfBirth})},updateContactInfo:function(t,n){return e.put("/api/patient/"+t+"/contact",{address:{line1:n.address.address1,line2:n.address.address2,city:n.address.city,state:n.address.state,postalCode:n.address.postalCode},phoneNumber:n.phoneNumber})}}}])}(window.app),function(e){e.factory("patientRepository",["$api",function(e){return{findAll:function(){return e.patients.getAll()},details:function(t){return e.patients.get(t)},edit:function(t){return e.patients.edit(t)}}}])}(window.app),function(e){e.controller("patientIntake",["$scope","$location","patientCommands",function(e,t,n){e.patient={},e.save=function(){n.intake(e.patient).success(function(){t.path("/patient")})}}]),e.controller("patientList",["$scope","patientRepository",function(e,t){t.findAll().success(function(t){e.patients=t}),e.dismiss=function(e){alert("deleting "+e.name)}}]),e.controller("patientDetails",["$scope","$routeParams","patientRepository",function(e,t,n){e.patient={},n.details(t.id).success(function(t){e.patient=t}),e.insuranceLinks={create:function(){return e.patient.currentVerification&&(!e.patient.currentVerification.status||"Approved"===e.patient.currentVerification.status)},editRequest:function(){return e.patient.currentVerification&&"Draft"===e.patient.currentVerification.status},viewSubmitted:function(){return e.patient.currentVerification&&"Submitted"===e.patient.currentVerification.status},viewVerification:function(){return e.patient.currentVerification&&"Approved"===e.patient.currentVerification.status}}}]),e.controller("patientEdit",["$scope","$routeParams","$location","patientRepository","patientCommands",function(e,t,n,i,r){e.patient={},i.edit(t.id).success(function(t){e.patient=t}),e.save=function(){r.update(e.patient).success(function(){n.path("/patient/"+e.patient.patientId)})}}]),e.controller("patientEditContactInfo",["$scope","$routeParams","$location","patientRepository","patientCommands",function(e,t,n,i,r){var o=t.id;e.contact={},i.edit(o).success(function(t){e.contact={address:{address1:t.address1,address2:t.address2,city:t.city,state:t.state,postalCode:t.postalCode},phoneNumber:t.phoneNumber}}),e.save=function(){r.updateContactInfo(o,e.contact).success(function(){n.path("/patient/"+o)})}}]),e.controller("patientInsurance",["$scope","$routeParams","$location","patientRepository","patientCommands",function(e,t,n,i,r){e.patientId=t.id,e.classification="medical",i.edit(t.id).success(function(t){e.medical=t.medicalInsurance||{},e.pip=t.personalInjuryProtection||{}}),e.save=function(){r.addInsurance(e.patientId,e).success(function(){n.path("/patient/"+e.patientId)})},e.insuranceTemplate=function(){return"medical"===e.classification?"/Templates/Patients/inputMedicalInsurance.html":"pip"===e.classification?"/Templates/Patients/inputPersonalInjuryProtection.html":""}}])}(angular.module("patientsApp")),function(e){e.controller("providerList",["$scope","careProviderRepository",function(e,t){e.providers=function(){return t.providers()},e.link=function(e){return"#provider/"+e.id}}]),e.controller("providerCreate",["$scope","$location","$api",function(e,t,n){e.provider={},e.save=function(){n.providers.create(e.provider).success(function(){t.path("/providers")})}}]),e.controller("providerDetails",["$scope","$routeParams","$location","$api","careProviderRepository",function(e,t,n,i,r){function o(){r.edit(t.id).success(function(t){e.provider=t})}e.provider={},e.users=function(){return e.provider.users},o(),e.save=function(){i.providers.update(e.provider).success(function(){r.refresh(),n.path("/providers")})},e.refresh=function(){r.refresh(),o()}}]),e.controller("providerPermissions",["$scope","$api",function(e,t){var n=function(){return e.$parent.provider};e.users=e.$parent.users;var i=e.refresh=e.$parent.refresh;e.roles=[{label:"Owner",name:"owner"},{label:"Practitioner",name:"practitioner"}],e.grant=function(e,r){t.providers.grantRole(e.user.userId,n().id,r.name).success(function(e){i()})},e.revoke=function(e,r){t.providers.revokeRole(e.user.userId,n().id,r).success(function(e){i()})}}])}(angular.module("providersApp")),function(e){e.factory("userCommands",["$api",function(e){return{login:function(t,n){var i={grant_type:"password",username:t,password:n};return e.auth.login(i)},signup:function(t){return e.users.signup(t)},invite:function(t,n){return e.users.invite(t,n)},register:function(t,n,i){return e.users.register(t,n,i)}}}])}(angular.module("loginApp")),function(e){e.factory("userSession",function(){function e(){return{logout:function(){t=e()}}}var t=e();return function(){return t}})}(window.app),function(e){e.controller("registrationController",["$scope","$routeParams","$location","userCommands",function(e,t,n,i){var r=t.token;e.registration={},e.save=function(){e.password===e.confirmPassword&&i.register(r,e.registration.name,e.registration.password).success(function(){console.log("registered "+e.name),n.path("/")})}}]),e.controller("userListController",["$scope","$api",function(e,t){var n=[];e.users=function(){return n},e.link=function(e){return"#user/"+e.userId},t.users.getAll().success(function(e){n=e})}]),e.controller("userDetailsController",["$scope","$routeParams","$api","careProviderRepository",function(e,t,n,i){function r(){n.users.get(o).success(function(t){e.user=t}),i.refresh()}var o=t.id;e.user=null,e.providers=function(){return e.user?e.user.providerRoles.map(function(e){return e.provider}):[]},e.billers=function(){return e.user?e.user.billerRoles.map(function(e){return e.biller}):[]},e.providerInvitations=function(){return e.user?e.user.providerInvitations:[]},e.billerInvitations=function(){return e.user?e.user.billerInvitations:[]},e.hasProvider=function(t){return e.user&&e.providers().some(function(e){return e.id===t.id})},r(),e.accept=function(e){n.users.accept(o,e.organization.id).success(function(){r()})},e.leave=function(e){n.providers.leave(o,e.id).success(function(){r()})}}]),e.controller("inviteController",["$scope","$routeParams","$location","userCommands",function(e,t,n,i){var r=t.id;e.invite=function(){i.invite(r,e.email).success(function(){console.log("invited "+e.email),n.path("/providers")})}}]),e.controller("signupController",["$scope","$routeParams","$location","userCommands",function(e,t,n,i){e.signup=function(){i.signup(e.email).success(function(){console.log("signed up "+e.email),n.path("/")})}}]),e.controller("userChooser",["$scope","$api",function(e,t){var n=[];e.users=function(){return n},t.users.getAll().success(function(e){n=e})}]),e.controller("roleChooser",["$scope",function(e){e.roles=function(t){return e.$parent.roles.filter(function(e){return!t.roles.some(function(t){return t===e.name})})},e.grant=e.$parent.grant}]),e.controller("oustandingInvites",["$scope","$routeParams","$location","$api",function(e,t,n,i){e.confirmations=[],i.users.getConfirmations().success(function(t){e.confirmations=t}),e.link=function(e){return"#register/"+e.token}}])}(angular.module("userApp")),function(e){e.service("verificationRepository",["$api","userSession",function(e,t){function n(){return t().verifications||(t().verifications={}),e.verifications.getAll().success(function(e){t().verifications=e})}return n(),{getVerification:function(n){return t().verifications&&t().verifications[n]&&t().verifications[n].request?{success:function(e){e(t().verifications[n])}}:e.verifications.get(n).success(function(e){t().verifications[e.verificationId]=e})},verifications:function(){return t().verifications||(t().verifications={},n()),t().verifications}}}])}(window.app),function(e){e.controller("verificationRequestCreate",["$scope","$routeParams","$location","$api",function(e,t,n,i){var r=t.patientId;e.save=function(){i.verifications.start(r,e.request).success(function(e){n.path("/verification/"+e)})},e.submit=function(){i.verifications.submitNewRequest(r,e.request).success(function(){n.path("/patient/"+r)})}}]),e.controller("verification",["$scope","$routeParams","$location","$modal","verificationRepository","$api",function(e,t,n,i,r,o){function a(t){var n=i.open({animation:!0,templateUrl:"/Templates/Verification/actions.html",controller:"verificationActions",size:"lg",resolve:{verification:function(){return e.verification},template:function(){return t},patientName:function(){return e.verification.patient.patientName}}});n.result.then(function(e){console.dir(e)},function(){console.info("Modal dismissed at: "+new Date)})}var s,c=t.verificationId;r.getVerification(c).success(function(t){e.verification=t,s=t.patientId}),e.verificationTemplate=function(){switch(e.verification&&e.verification.status){case"Draft":case"Rejected":return"/Templates/Verification/verifyInsuranceRequest.html";case"Submitted":return"/Templates/Verification/verifyInsurance.html";case"Assigned":return"/Templates/Verification/displayRequest.html";case"In Progress":return"/Templates/Verification/verifyInsurance.html";case"PendingApproval":return"/Templates/Verification/verifyInsurance.html";case"Verified":return"/Templates/Verification/insuranceVerificationLetter.html"}return""};var l={assign:{name:"Assign",handler:"startAssignment"},startCall:{name:"Start Call",handler:"startCall"},endCall:{name:"End Call",handler:"endCall"},save:{name:"Save",handler:"save"},saveDraft:{name:"Save",handler:"saveDraft"},approve:{name:"Approve",handler:"dummy"},reject:{name:"Reject",handler:"dummy"}};e.availableActions=function(){switch(e.verification&&e.verification.status){case"Draft":case"Rejected":return[l.saveDraft];case"Submitted":return[l.assign];case"Assigned":return[l.startCall,l.assign];case"In Progress":return[l.save,l.endCall];case"PendingApproval":return[l.approve,l.reject];case"Verified":return[]}return[]},e.dummy=function(){console.log("Dummy callback")},e.handleClick=function(t){e[t]()},e.saveDraft=function(){o.verifications.updateRequest(c,e.request)},e.submit=function(){o.verifications.submitRequest(c,e.request).success(function(){n.path("/patient/"+s)})},e.startAssignment=function(){a("/Templates/Verification/assign.html")},e.startCall=function(){a("/Templates/Verification/startCall.html")},e.endCall=function(){a("/Templates/Verification/endCall.html")}}]),e.controller("insuranceVerificationList",["$scope","verificationRepository",function(e,t){e.verifications=t.verifications,e.link=function(e){return"#verification/"+e.verificationId},e.refresh=function(){t.refresh()}}]),e.controller("verificationActions",["$scope","$api","verification","patientName","template",function(e,t,n,i,r){var o=n.id;e.verification=n,e.actionTemplate=r,e.patientName=i,e.complete=function(){t.verifications.complete(o,e.verification).success(function(){$location.path("/verifications")})},e.select=function(t){e.selectedUser=t},e.reject=function(){t.verifications.reject(o,e.verification).success(function(){$location.path("/patient/"+patientId)})},e.assign=function(){t.verifications.delegate(o,e.selectedUser.userId)}}]),e.controller("verification.startCall",["$scope","$location","$api",function(e,t,n){var i=e.$parent.verification.verificationId;e.startCall=function(){console.log("starting call: "+i),n.verifications.startCall(i,{serviceCenterRepresentative:e.serviceCenterRepresentative}).success(function(){t.path("/verification/"+i)})}}]),e.controller("verification.onCall",["$scope","$api",function(e,t){e.verification=e.$parent.verification;var n=e.$parent.verification.verificationId;e.callStart=function(){return new Date(e.verification.currentCallStartTime).getTime()},e.save=function(){t.verifications.update(n,e.verification).success(function(){console.log("saved "+n)})}}]),e.controller("verification.endCall",["$scope","$api",function(e,t){e.verification=e.$parent.verification;var n=e.$parent.verification.verificationId;e.serviceCenterRepresentative=e.verification.serviceCenterRepresentative,e.endCall=function(){t.verifications.endCall(n,{serviceCenterRepresentative:e.serviceCenterRepresentative,callReferenceNumber:e.callReferenceNumber})}}]),e.controller("userChooser",["$scope","$api",function(e,t){var n=[];e.users=function(){return n},t.users.getAll().success(function(e){n=e})}])}(angular.module("verificationApp"));